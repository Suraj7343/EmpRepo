@model EmployeeAttendance.BAL.Models.EmployeeVM
@{
    ViewBag.Title = "Create";
    //Model.Remember = false;
}
<br />
<br />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h1 class="panel-title text-center"> AddEmployeeData</h1>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group" id="AlphabetsOnly">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "new-FirstName" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="alphabetsOnly">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @autocomplete = "new-Email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", @autocomplete = "new-ContactNumber" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeAddress, new { htmlAttributes = new { @class = "form-control", @autocomplete = "new-EmployeeAddress" } })
                        @Html.ValidationMessageFor(model => model.EmployeeAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeSalary, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmployeeSalary, new { htmlAttributes = new { @class = "form-control", @autocomplete = "new-EmployeeSalary", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.EmployeeSalary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.EmployeeImage, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="file" required="required" name="file" id="file" />
                        @Html.ValidationMessageFor(model => model.EmployeeImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownList("DepId", new SelectList(ViewBag.DepartmentList, "Key", "Value"), "Select Department", new { @class = "form-control " })

                        @Html.ValidationMessageFor(model => model.DepId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "new-DateOfBirth" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "new-JoiningDate" } })
                        @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!--<div class="form-group">
                    @Html.LabelFor(model => model.CanLogIn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">-->
                        @*<input id="Remember" type="checkbox" value="true" name="Remember" />
                            <input type="hidden" value="false" name="Remember" />*@
                        @*<input id="Remember" name="Remember" type="checkbox" value="@Model.CanLogIn"/>*@
                        @*  @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "new-JoiningDate" } })*@
                        <!--@Html.CheckBox("CanLogIn", false, new { htmlAttributes = new { @autocomplete = "new-CanLogIn" } })-->
                        @*@Html.ValidationMessageFor(model => model.Remember, "", new { @class = "text-danger" })*@
                    <!--</div>
                </div>-->

                <div class="form-group">
                    <label class="control-label col-md-2">
                        CanLogin
                    </label>
                    <div class="col-md-10">
                        <label class="checkbox-inline">
                            @Html.CheckBox("CanLogIn", false)
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        @*@Html.ActionLink("Create", "Create", new { onclick = "return confirm('Are You Sure To Add Employee?')" })*@
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.0.min.js"></script>
    <script>
        $('#AlphabetsOnly').keypress(function (e) {
            var regex = new RegExp(/^[a-zA-Z\s]+$/);
            var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
            if (regex.test(str)) {
                return true;
            }
            else {
                e.preventDefault();
                return false;
            }
        });

        $('#alphabetsOnly').keypress(function (e) {
            var regex = new RegExp(/^[a-zA-Z\s]+$/);
            var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
            if (regex.test(str)) {
                return true;
            }
            else {
                e.preventDefault();
                return false;
            }
        });

        $(document).ready(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd-mm-yy",
                changemonth: true,
                changeyear: true
            });
        });
    </script>
}

<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/jquery-1.10.2.js" language="javascript" type="text/javascript"></script>
<script src="http://code.jquery.com/ui/1.11.0/jquery-ui.js" language="javascript"
        type="text/javascript"></script>
<script type="text/javascript" language="javascript">
    $(function () {
        $("#datepicker").datepicker({
            showOn: "button",
            buttonImage: "/calendar.jpg",
            buttonImageOnly: true,
            buttonText: "Select date"
        });
    });
</script>







